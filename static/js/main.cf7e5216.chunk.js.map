{"version":3,"sources":["Cells.js","Rows.js","THeader.js","App.js","serviceWorker.js","index.js"],"names":["getHighlightedString","str","hilitedText","replace","RegExp","getPropString","value","filterValue","Object","keys","map","key","join","Cells","user","onValueSave","filters","useState","keyEdit","setKeyEdit","valueEdit","setValueEdit","cancelEdit","valueSave","e","field","target","dataset","val","document","querySelector","id","onInputChange","type","className","onChange","data-field","onClick","onDoubleClick","dangerouslySetInnerHTML","__html","Rows","users","searchIcon","width","height","viewBox","fill","xmlns","fillRule","d","THeader","label","setSearch","valueSearch","filterMode","cancelSearch","setValueSearch","setFilterMode","labelEdit","setLabelEdit","searchText","App","initialUsers","setInitialUsers","setUsers","setKeys","isLoading","setIsLoading","isFetching","setIsFetching","setFilters","filteredUsers","filter","toLowerCase","includes","handleScroll","window","innerHeight","documentElement","scrollTop","offsetHeight","console","log","useEffect","addEventListener","removeEventListener","fetch","then","response","json","data","el","ind","length","newUsers","catch","error","disabled","role","aria-hidden","find","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cf7e5216.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst getHighlightedString = (str, hilitedText = '') => {\n  if (!hilitedText) {\n    return str;\n  }\n\n  return str.replace(new RegExp(hilitedText, 'gi'), `<span class=\"hilited\">${hilitedText}</span>`);\n};\n\nconst getPropString = (value, filterValue = '') => {\n  if (typeof value === \"object\") {\n    return Object.keys(value).map(key => `<strong>${key}:</strong> </br>${getPropString(value[key])}`).join(\"</br>\");\n  } else {\n    return getHighlightedString(value, filterValue);\n  }\n}\n\nfunction Cells({ user, keys, onValueSave, filters }) {\n  const [keyEdit, setKeyEdit] = useState('');\n  const [valueEdit, setValueEdit] = useState('');\n\n  const cancelEdit = () => {\n    setKeyEdit('');\n    setValueEdit('');\n  }\n\n  const valueSave = (e) => {\n    const field = e.target.dataset.field;\n    const input = document.querySelector(`#user-field-${user.id}-${field} input`);\n    const val = input.value;\n    onValueSave(user.id, field, val);\n    cancelEdit();\n  }\n\n  const onInputChange = e => {\n    setValueEdit(e.target.value);\n  }\n\n  return (\n    <>\n      {\n        keys.map(key => {\n          return key === keyEdit ?\n            <td id={`user-field-${user.id}-${key}`}>\n\n              <input type=\"text\" className=\"form-control\" value={valueEdit} onChange={onInputChange} />\n              <button data-field={key} className=\"btn btn-primary btn-sm margin-left mt-1\" onClick={valueSave}>Save</button>\n              <button className=\"btn btn-secondary btn-sm margin-left mt-1\" onClick={cancelEdit}>Cancel</button>\n            </td>\n            : (key !== 'id' && key !== 'company' && key !== 'address') ?\n              <td onDoubleClick={() => { setKeyEdit(key); setValueEdit(user[key]) }}>\n                <div dangerouslySetInnerHTML={{ __html: getPropString(user[key], filters[key]) }} />\n              </td>\n              : <td>\n                <div dangerouslySetInnerHTML={{ __html: getPropString(user[key]) }} />\n              </td>\n        })\n      }\n    </>\n  )\n}\n\nexport default Cells;\n","import React from 'react';\nimport Cells from './Cells';\n\nfunction Rows({users, keys, onValueSave, filters}) {\n\n\n  return (\n    <>\n      {\n        users.map(user => <tr> <Cells user={user} keys={keys} onValueSave={onValueSave} filters={filters}/></tr>)\n      }\n    </>\n  )\n}\n\nexport default Rows;\n","import React from 'react';\nimport './App.css';\n\nconst searchIcon = <svg className=\"bi bi-search\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n  <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n</svg>\n\nfunction THeader({ label, setSearch, valueSearch, filterMode, cancelSearch, setValueSearch, setFilterMode, labelEdit, setLabelEdit, searchText }) {\n\n  const onInputChange = e => {\n    setValueSearch(e.target.value);\n  }\n\n\n  return (\n    label !== 'id' && labelEdit === label && filterMode ?\n      <th className=\"border\">{label}\n        <input type=\"text\" className=\"form-control\" value={valueSearch} onChange={onInputChange} />\n        <button onClick={() => setSearch(label, valueSearch)}>Search</button>\n        <button onClick={() => { cancelSearch(); setValueSearch('') }}>Cancel</button>\n      </th>\n      : label === 'id' || label === 'company' || label === 'address' ?\n        <th className=\"border\">\n          {label}\n        </th>\n        :\n        <th className=\"border\">\n          {label}\n          <button onClick={() => { setValueSearch(''); setLabelEdit(label); setFilterMode(true) }}>{searchIcon}</button>\n        </th>\n  )\n}\n\nexport default THeader;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Rows from './Rows';\nimport THeader from './THeader';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n const [initialUsers, setInitialUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [keys, setKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [valueSearch, setValueSearch] = useState('');\n  const [labelEdit, setLabelEdit] = useState('');\n  const [filterMode, setFilterMode] = useState(false);\n  const [filters, setFilters] = useState({});\n\n  const cancelSearch = () => {\n    setValueSearch('');\n    setFilterMode(false);\n    setUsers(initialUsers);\n    setLabelEdit('');\n    setFilters({});\n  }\n\n  const setSearch = (label, valueSearch) => {\n    const filteredUsers = users.filter(user => user[label].toLowerCase().includes(valueSearch.toLowerCase()));\n    setUsers(filteredUsers);\n    filters[label] = valueSearch;\n    setFilters({...filters});\n  }\n\n  const onValueSave = (id, key, value) => {\n    const user = users.find(user => user.id === id);\n    user[key] = value;\n    setUsers([...users]);\n  };\n\n  const handleScroll = () => {\n    if ((window.innerHeight + document.documentElement.scrollTop) < (document.documentElement.offsetHeight - 100)) return;\n    console.log('Fetch more list items!');\n    setIsFetching(true);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (!isFetching || filterMode) return;\n    let id;\n    fetch('https://jsonplaceholder.cypress.io/users')\n      .then(response => response.json())\n      .then(data => {\n        data.map((el, ind) => {\n          id = users.length + ind + 1;\n          el.id = id;\n          return el;\n        });\n        const newUsers = [...users, ...data];\n        setUsers(newUsers);\n        setInitialUsers(newUsers);\n        setIsFetching(false);\n      }).catch(error => console.log(error))\n  }, [isFetching, users, filterMode]);\n\n  const load = () => {\n    setIsLoading(true)\n    fetch('https://jsonplaceholder.cypress.io/users')\n      .then(response => response.json())\n      .then(data => {\n        setUsers(data);\n        setInitialUsers(data);\n        setKeys(Object.keys(data[0]));\n        setIsLoading(false);\n      }).catch(error => console.log(error))\n  };\n\n\n  return (\n    <div>\n      {isLoading ? '...Loading' : ''}\n      <button className=\"btn btn-primary\" onClick={load} disabled={isLoading}>\n\n        {isLoading ?\n          <>\n            <span className=\"spinner-border spinner-border-sm\"\n              role=\"status\"\n              aria-hidden=\"true\"></span>\n            <div className=\"text-center mb-4\"></div>\n            <span className=\"sr-only-\">Loading...</span>\n          </>\n          : 'Load users'\n        }\n\n      </button>\n      {\n        !!keys.length && !!users.length &&\n        <table className=\"border\">\n          <tr className=\"border\">\n            {\n              keys.map(el => <THeader label={el} \n                              setSearch={setSearch} \n                              valueSearch={valueSearch} \n                              filterMode={filterMode}\n                              setFilterMode={setFilterMode}\n                              cancelSearch={cancelSearch}\n                              setValueSearch={setValueSearch}\n                              labelEdit={labelEdit}\n                              setLabelEdit={setLabelEdit}/>)\n            }\n          </tr>\n          <Rows users={users} keys={keys} onValueSave={onValueSave} filters={filters}/>\n        </table>\n      }\n\n      {isFetching}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}